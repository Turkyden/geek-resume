[{"D:\\github\\geek-resume\\src\\index.tsx":"1","D:\\github\\geek-resume\\src\\reportWebVitals.ts":"2","D:\\github\\geek-resume\\src\\App.tsx":"3"},{"size":500,"mtime":1608017365586,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1608017365586,"results":"6","hashOfConfig":"5"},{"size":2136,"mtime":1608097068565,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ficg58",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\github\\geek-resume\\src\\index.tsx",[],["16","17"],"D:\\github\\geek-resume\\src\\reportWebVitals.ts",[],"D:\\github\\geek-resume\\src\\App.tsx",["18"],"import React, { useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { useSize } from \"ahooks\";\nimport MonacoEditor from 'react-monaco-editor';\nimport SplitPane from 'react-split-pane';\nimport ReactMarkdown from 'react-markdown';\nimport './A4.css';\n\nfunction App() {\n  const [code, setCode] = useState(`# Hello, *world*!`);\n  const [darkMode, setDarkMode] = useState(true);\n\n  const ref = useRef(null);\n\n  const { height = 0 } = useSize(ref);\n\n  const editorDidMount = (editor: any, monaco: any): void => {\n    console.log('editorDidMount', editor);\n    editor.focus();\n  }\n\n  const onChange = (newValue: any) => setCode(newValue);\n\n  const options = {\n    selectOnLineNumbers: true\n  };\n\n  return (\n    <div ref={ref} className=\"w-screen h-screen\">\n      <SplitPane split=\"horizontal\" allowResize={false}>\n        <div className=\"w-full bg-black h-12 flex justify-between items-center px-4\">\n          <a className=\"text-white text-lg\" href=\"#\" target=\"_blank\" >Geek Resume</a>\n          <ul className=\"w-64 flex justify-between\">\n            <li className=\"\">linkin / Boss / </li>\n            <li className=\"\">Export as PDF / PNG / Markdown</li>\n            <li className=\"cursor-pointer\" onClick={() => setDarkMode(value => !value)}>{ darkMode ? 'ðŸŒ•' : 'ðŸŒ™' }</li>\n          </ul>\n        </div>\n        <SplitPane split=\"vertical\" size={height - 3.5*14 + 'px'} >\n          <div className=\"w-full h-full flex flex-col justify-center items-center bg-gray-100 overflow-scroll\">\n            <ReactMarkdown className=\"page markdown-body\">{code}</ReactMarkdown>\n          </div>\n          <div className=\"w-full h-full\">\n            <MonacoEditor\n              width=\"100%\"\n              height={height - 3.5*14 + 'px'}\n              language=\"markdown\"\n              theme={darkMode ? \"vs-dark\" : \"vs\"}\n              value={code}\n              options={options}\n              onChange={onChange}\n              editorDidMount={editorDidMount}\n            />\n          </div>\n        </SplitPane>\n      </SplitPane>\n    </div>\n  );\n}\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":32,"column":11,"nodeType":"25","endLine":32,"endColumn":71},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]